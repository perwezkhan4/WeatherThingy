{"version":3,"sources":["components/WeatherCard/Location.js","components/WeatherCard/Icon.js","components/WeatherCard/Condition.js","components/WeatherCard/component.js","components/WeatherEngine.js","App.js","serviceWorker.js","index.js"],"names":["Location","city","country","getWeather","useState","query","setQuery","inputMode","setInputMode","inputRef","useRef","useEffect","current","focus","Container","div","initial","opacity","animate","FormElement","onSubmit","e","preventDefault","InputField","ref","required","value","onChange","target","SearchButton","type","CancelButton","onClick","City","Country","styled","form","input","button","span","h1","h3","Icon","props","img","icon","condition","src","alt","Condition","temp","style","fontSize","theme","reelStyle","text","State","reel","height","display","alignItems","overflowY","lineHeight","justifyContent","group","transitionDelay","transitionTimingFunction","transform","number","fontFamily","fontWeight","WeatherCard","highColor","lowColor","bg","Math","abs","Card","scale","WeatherEngine","location","error","setError","loading","setLoading","weather","setWeather","q","a","fetch","apiRes","json","resJSON","main","name","color","width","size","Display","className","href","rel","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6a66cf9f.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Location = ({ city, country, getWeather }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [inputMode, setInputMode] = useState(false);\r\n  const inputRef = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    if (inputMode) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [inputMode]);\r\n\r\n  if (inputMode) {\r\n    return (\r\n      <Container>\r\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }}>\r\n          <FormElement\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              getWeather(query);\r\n            }}\r\n          >\r\n            <InputField\r\n              ref={inputRef}\r\n              required\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n            />\r\n            <SearchButton type=\"submit\">Search</SearchButton>\r\n            <CancelButton onClick={() => setInputMode(false)}>X</CancelButton>\r\n          </FormElement>\r\n        </motion.div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <City onClick={() => setInputMode(true)}>{city}</City>\r\n      <Country> {country} </Country>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst FormElement = styled.form`\r\n  display: flex;\r\n  position: relative;\r\n  background: #46618b;\r\n  border-radius: 5px;\r\n`;\r\nconst InputField = styled.input`\r\n  padding: 5px;\r\n  background: transparent;\r\n  color: white;\r\n  border: none;\r\n  width: 80px;\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\nconst SearchButton = styled.button`\r\n  padding: 5px;\r\n  background: #394e70;\r\n  border-top-right-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\nconst CancelButton = styled.span`\r\n  font-size: 0.8rem;\r\n  position: absolute;\r\n  background: #557fc2;\r\n  cursor: pointer;\r\n  width: 17px;\r\n  height: 17px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  top: -8px;\r\n  right: -10px;\r\n  box-shadow: 1px 0px 2px rgba(0, 0, 0, 0.4);\r\n`;\r\nconst City = styled.h1`\r\n  font-family: \"Merriweather\", sans-serif;\r\n  font-size: 1.6rem;\r\n  position: relative;\r\n  cursor: pointer;\r\n  &:hover {\r\n    top: -5px;\r\n  }\r\n`;\r\nconst Country = styled.h3`\r\n  font-family: \"Fira Sans\", sans-serif;\r\n  font-size: 1.1rem;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Icon = (props) => {\r\n  const Icon = styled.img`\r\n    width: 40%;\r\n  `;\r\n\r\n  var icon = \"\";\r\n  switch (props.condition) {\r\n    case \"Clouds\":\r\n      icon = `./img/Mostly Cloudy-2x.png`;\r\n      break;\r\n    case \"Clear\":\r\n      icon = `./img/Mostly Sunny-2x.png`;\r\n      break;\r\n    case \"Haze\":\r\n      icon = `./img/Haze-2x.png`;\r\n      break;\r\n    case \"Hail\":\r\n      icon = `./img/Hail-2x.png`;\r\n      break;\r\n    case \"Fog\":\r\n      icon = `./img/Fog-2x.png`;\r\n      break;\r\n    case \"Tornado\":\r\n      icon = `./img/Tornado-2x.png`;\r\n      break;\r\n    case \"Dust\":\r\n      icon = `./img/Dust-2x.png`;\r\n      break;\r\n    case \"Mist\":\r\n      icon = `./img/Fog-2x.png`;\r\n      break;\r\n    case \"Snow\":\r\n      icon = `./img/Snow-2x.png`;\r\n      break;\r\n    case \"Rain\":\r\n      icon = `./img/Rain-2x.png`;\r\n      break;\r\n    case \"Drizzle\":\r\n      icon = `./img/Drizzle-2x.png`;\r\n      break;\r\n    case \"Thunderstorm\":\r\n      icon = `./img/Severe Thunderstorm-2x.png`;\r\n      break;\r\n    default:\r\n      icon = `./img/Fog-2x.png`;\r\n      break;\r\n  }\r\n\r\n  return <Icon src={icon} alt=\"Weather Icon\" />;\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Reel from \"react-reel\";\r\n\r\nconst Condition = ({ temp, condition }) => {\r\n  return (\r\n    <>\r\n      <div style={{ fontSize: \"2rem\" }}>\r\n        <Reel theme={reelStyle} text={`${temp}˚C`} />\r\n      </div>\r\n      <State>{condition}</State>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Condition;\r\n\r\nconst State = styled.h3`\r\n  font-family: \"Merriweather\", sans-serif;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst reelStyle = {\r\n  reel: {\r\n    height: \"1.07em\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n    overflowY: \"hidden\",\r\n    lineHeight: \"0.97em\",\r\n    justifyContent: \"center\",\r\n  },\r\n  group: {\r\n    transitionDelay: \"0\",\r\n    transitionTimingFunction: \"ease-in-out\",\r\n    transform: \"translate(0, 0)\",\r\n    height: \"1.5em\",\r\n  },\r\n  number: {\r\n    height: \"1em\",\r\n    fontFamily: \"Fira sans\",\r\n    fontWeight: 200,\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport Location from \"./Location\";\r\nimport Icon from \"./Icon\";\r\nimport Condition from \"./Condition\";\r\n\r\nconst WeatherCard = ({ temp, condition, city, country, getWeather }) => {\r\n  let highColor = 0;\r\n  let lowColor = 0;\r\n  let bg = null;\r\n  if (temp > 12) {\r\n    // This is for hot weather\r\n    highColor = (1 - (temp - 12) / 28) * 255;\r\n    lowColor = highColor - 200;\r\n    bg = `linear-gradient(\r\n      to top,\r\n      rgb(255, ${highColor}, 0),\r\n      rgb(255, ${Math.abs(lowColor)}, 0)\r\n    )`;\r\n  } else if (+temp <= 12) {\r\n    // This is for cold weather\r\n    highColor = (1 - (temp + 20) / 32) * 255;\r\n    lowColor = highColor - 200;\r\n    bg = `linear-gradient(\r\n      to top,\r\n      rgb(0, ${highColor}, 255),\r\n      rgb(0, ${Math.abs(lowColor)}, 255)\r\n    )`;\r\n  }\r\n  const Card = styled.div`\r\n    margin: 0 auto;\r\n    background: ${bg};\r\n    width: 160px;\r\n    height: 210px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    border-radius: 15px;\r\n  `;\r\n\r\n  return (\r\n    <motion.div initial={{ scale: 0 }} animate={{ scale: 1 }}>\r\n      <Card>\r\n        <Location getWeather={getWeather} city={city} country={country} />\r\n        <Icon condition={condition} />\r\n        <Condition temp={temp} condition={condition} />\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport WeatherCard from \"./WeatherCard/component\";\r\n\r\nconst WeatherEngine = ({ location }) => {\r\n  // init for our state variables\r\n  const [query, setQuery] = useState(\"\"); // for user query\r\n  const [error, setError] = useState(false); // for error handeling\r\n  const [loading, setLoading] = useState(false); // for loading state\r\n  const [weather, setWeather] = useState({\r\n    // to display and store weather for specific cities\r\n    temp: null,\r\n    city: null,\r\n    condition: null,\r\n    country: null,\r\n  });\r\n\r\n  //defining the data fetchin function\r\n  const getWeather = async (q) => {\r\n    setQuery(\"\"); // reset the query to empty\r\n    setLoading(true); // set loading to true while we fetch the results\r\n    try {\r\n      const apiRes = await fetch(\r\n        `http://api.openweathermap.org/data/2.5/weather?q=${q}&units=metric&APPID=c80b69787ac9c776d1cf86f8a6c50ce7`\r\n      );\r\n      const resJSON = await apiRes.json();\r\n      setWeather({\r\n        temp: resJSON.main.temp,\r\n        city: resJSON.name,\r\n        condition: resJSON.weather[0].main,\r\n        country: resJSON.country,\r\n      });\r\n    } catch (error) {\r\n      setError(true); // If there is any error just set error to true\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // this hook will make the code run only once the component is mounted and will only run when Location changes which won't happen\r\n  useEffect(() => {\r\n    getWeather(location);\r\n  }, [location]);\r\n\r\n  if (error) {\r\n    return (\r\n      <div style={{ color: \"black\" }}>\r\n        {/* There has been an error! */}\r\n        <br />\r\n        <button onClick={() => setError(false)}>\r\n          No such Location Found - Click to Reset!\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          color: \"black\",\r\n          width: \"200px\",\r\n          height: \"240px\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <PulseLoader color=\"purple\" size={10} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <WeatherCard\r\n      temp={weather.temp}\r\n      condition={weather.condition}\r\n      city={weather.city}\r\n      country={weather.country}\r\n      getWeather={getWeather}\r\n    />\r\n  );\r\n};\r\n\r\nexport default WeatherEngine;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport WeatherEngine from \"./components/WeatherEngine\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"grid-container\">\n        <div className=\"grid-item\">\n          <WeatherEngine location=\"vancouver, ca\" />\n        </div>\n        <div className=\"grid-item\">\n          <WeatherEngine location=\"hungary, hu\" />\n        </div>\n        <div className=\"grid-item\">\n          <WeatherEngine location=\"germany, de\" />\n        </div>\n        <div className=\"grid-item\">\n          <WeatherEngine location=\"finland, fi\" />\n        </div>\n        <div className=\"grid-item\">\n          <WeatherEngine location=\"sydney, au\" />\n        </div>\n        <div className=\"grid-item\">\n          <WeatherEngine location=\"beijing, zh_cn\" />\n        </div>\n        <div className=\"grid-item\">\n          <WeatherEngine location=\"tokyo, \" />\n        </div>\n        <div className=\"grid-item\">\n          <WeatherEngine location=\"mali, \" />\n        </div>\n      </div>\n      <Display />\n    </div>\n  );\n}\n\nfunction Display() {\n  return (\n    <div className=\"display\">\n      <div className=\"header\">Weather Around The World 🌎🤖</div>\n      <div className=\"links\">\n        by{\" \"}\n        <a\n          href=\"https://github.com/perwezkhan4\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          @perwezkhan4\n        </a>\n        <br />\n        <br />\n        <p className=\"para\">\n          Click on the City/Country name to search your next location ! ⚡🚀\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}